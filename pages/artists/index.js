import Head from 'next/head'
import Nav from "../../components/Nav";
import Overlay from "../../components/Nav/Overlay";
import Marquee from "../../components/Marquee";
import ArtistList from "../../components/ArtistList/";
import FooterWrapper from "../../components/Footer";
import styled from "styled-components";
import React, {useState} from 'react';
import { useRouter } from 'next/router'
import {initializeApollo} from "../../utilites";
import {GetPostDocument, GetPostsDocument} from "../../schema";

const Wrapper = styled.div`
background-color: #111;
padding-top: 4rem;
padding-bottom: 3rem;
`

const ContainerWrapper = styled.div`
  max-width: 1140px;
  padding: 0 1rem;
  margin: 0 auto;
`

const Artists = (id, title)  => {
    const {data, loading, refetch} = useGetPostsQuery()

    const changeCategory = (e) => {
        const {value} = e.target;
        refetch({
            where: {
                ...(value !== 'all' ? {
                    category: value
                } : {})
            }
        })
    }


    if(!data || loading) return <>Loading</>

    return (
        <>
            <Head>
                <title>TT records | Homepage</title>
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <Nav>
                <Marquee>Marquee rocks!</Marquee>
                
            </Nav>
            <Overlay/>
            <Wrapper>
            <ContainerWrapper>

                <ArtistList>
                    <li>{title}</li>
                    <li><span class="name"><a href="https://www.google.com">Ans M</a><span class="icons"><a class="bandcamp"><svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fillRule="evenodd" clipRule="evenodd" d="M24 12C24 18.6295 18.6295 24 12 24C5.37054 24 0 18.6295 0 12C0 5.37054 5.37054 0 12 0C18.6295 0 24 5.37054 24 12ZM5.57143 15.7768H14.3304L18.4286 8.22322H9.66965L5.57143 15.7768Z" fill="white"/></svg></a><a class="soundcloud"><svg width="31" height="14" viewBox="0 0 31 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M30.8572 9.60269C30.8572 11.692 29.1563 13.3795 27.067 13.3795H16.5409L16.457 13.3627C16.2686 13.3081 16.125 13.1485 16.125 12.9375V0.897322C16.125 0.669644 16.2054 0.562501 16.5 0.455358C17.2366 0.160714 18.067 0 18.9241 0C22.4197 0 25.2857 2.67857 25.5938 6.09376C26.0491 5.90626 26.5447 5.79911 27.067 5.79911C29.1563 5.79911 30.8572 7.50001 30.8572 9.60269ZM15.7683 13.0341C15.7293 13.2225 15.5608 13.3661 15.3616 13.3661C15.1339 13.3661 14.9464 13.1786 14.9331 12.9509L14.8527 11.4241L14.7723 9.85715L14.9331 1.33929V1.29911C14.9464 1.17857 15 1.05804 15.0938 0.97768C15.1607 0.924108 15.2545 0.88393 15.3616 0.88393C15.4286 0.88393 15.5089 0.910715 15.5625 0.950894C15.6831 1.01786 15.7634 1.15179 15.7768 1.29911L15.9643 9.85715L15.7768 12.9509L15.7683 13.0341ZM14.0625 13.3929C14.1697 13.3929 14.2634 13.3393 14.3304 13.2723C14.4107 13.2054 14.4509 13.1116 14.4509 13.0045L14.4643 12.6831L14.6116 9.85715L14.4509 2.00893C14.4509 1.875 14.3839 1.75447 14.2768 1.6875C14.2098 1.64732 14.1429 1.62054 14.0625 1.62054C13.9822 1.62054 13.9152 1.64732 13.8482 1.6875C13.7411 1.75447 13.6741 1.875 13.6741 2.00893L13.6607 2.08929L13.5268 9.84376C13.5268 9.84376 13.5268 9.85715 13.6741 13.0045V13.0179C13.6741 13.0982 13.7009 13.1786 13.7545 13.2456C13.8348 13.3393 13.942 13.3929 14.0625 13.3929ZM10.5 13.0714C10.4866 13.2456 10.3527 13.3795 10.1786 13.3795C10.0179 13.3795 9.88394 13.2456 9.87055 13.0714L9.68305 9.84376L9.87055 2.83929C9.87055 2.66518 10.0179 2.51786 10.1786 2.51786C10.3527 2.51786 10.4866 2.66518 10.5 2.83929L10.7143 9.84376L10.5 13.0714ZM11.4643 13.3795C11.6518 13.3795 11.7991 13.2322 11.7991 13.0447L12 9.84376L11.7991 3.0134C11.7991 2.8259 11.6518 2.67857 11.4643 2.67857C11.2768 2.67857 11.1295 2.8259 11.1295 3.0134L10.942 9.84376L11.1295 13.0447C11.1429 13.2322 11.2768 13.3795 11.4643 13.3795ZM9.2009 13.0848C9.18751 13.2456 9.06698 13.3661 8.90626 13.3661C8.75894 13.3661 8.6384 13.2456 8.62501 13.0848L8.41072 9.84376L8.62501 3.06697C8.62501 2.90625 8.75894 2.77232 8.90626 2.77232C9.06698 2.77232 9.18751 2.90625 9.2009 3.06697L9.44198 9.84376L9.2009 13.0848ZM12.7634 13.3795C12.9643 13.3795 13.125 13.2188 13.125 13.0179L13.3125 9.85715L13.125 3.26786C13.1116 3.05358 12.9643 2.89286 12.7634 2.89286C12.5625 2.89286 12.4018 3.05358 12.3884 3.26786L12.2277 9.85715L12.3884 13.0179C12.4018 13.2188 12.5625 13.3795 12.7634 13.3795ZM7.8884 13.1384C7.8884 13.2857 7.76787 13.3929 7.63394 13.3929C7.48662 13.3929 7.37947 13.2857 7.36608 13.1384L7.15179 9.87055L7.36608 3.60268L7.38034 3.53268C7.4163 3.42262 7.51117 3.34822 7.63394 3.34822C7.76787 3.34822 7.8884 3.45536 7.8884 3.60268L8.14287 9.87055L7.8884 13.1384ZM6.40179 13.3795C6.52233 13.3795 6.62947 13.2723 6.62947 13.1384L6.91072 9.84376L6.62947 4.75447C6.62947 4.62054 6.52233 4.5134 6.40179 4.5134C6.29019 4.5134 6.20648 4.5878 6.17393 4.69011L6.16071 4.75482L5.91965 9.84376L6.16072 13.1384C6.17411 13.2723 6.26786 13.3795 6.40179 13.3795ZM4.11161 13.1116C4.09822 13.2188 4.01786 13.2857 3.92411 13.2857C3.83036 13.2857 3.75 13.2188 3.75 13.1116L3.46875 9.84376L3.75 6.46876C3.75 6.36161 3.83036 6.29465 3.92411 6.29465C4.01786 6.29465 4.09822 6.36161 4.11161 6.46876L4.41965 9.84376L4.11161 13.1116ZM2.70536 13.1652C2.78572 13.1652 2.85268 13.0982 2.85268 13.0179L3.1875 9.84376L2.85268 6.56251C2.85268 6.46876 2.78572 6.40179 2.70536 6.40179C2.625 6.40179 2.55804 6.46876 2.54465 6.56251L2.2634 9.84376L2.54465 13.0179C2.55804 13.0982 2.625 13.1652 2.70536 13.1652ZM5.37054 13.1384C5.35715 13.2589 5.2634 13.3527 5.15626 13.3527C5.04911 13.3527 4.95536 13.2589 4.95536 13.1384L4.68751 9.84376L4.95536 6.70983C4.95536 6.60269 5.04911 6.50894 5.15626 6.50894C5.2634 6.50894 5.35715 6.60269 5.37054 6.70983L5.65179 9.84376L5.37054 13.1384ZM1.48661 12.6831C1.55357 12.6831 1.60714 12.6295 1.62054 12.5625L1.96875 9.84376L1.62054 7.07144C1.60714 7.00447 1.55357 6.9509 1.48661 6.9509C1.43304 6.9509 1.38804 6.98519 1.37218 7.03319L1.36607 7.07144L1.05804 9.84376L1.36607 12.5491C1.36607 12.6295 1.41964 12.6831 1.48661 12.6831ZM0.468751 11.5313C0.455358 11.5982 0.415179 11.6518 0.348215 11.6518C0.28125 11.6518 0.241072 11.5982 0.227679 11.5313L0 9.84376L0.227679 8.12947C0.241072 8.06251 0.28125 8.00894 0.348215 8.00894C0.415179 8.00894 0.455358 8.06251 0.468751 8.12947L0.736608 9.84376L0.468751 11.5313Z" fill="white"/></svg></a><a class="spotify"><svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M24.8572 12C24.8572 18.625 19.4822 24 12.8572 24C6.23218 24 0.857178 18.625 0.857178 12C0.857178 5.375 6.23218 0 12.8572 0C19.4822 0 24.8572 5.375 24.8572 12ZM19.9041 10.6094C20.1228 10.7344 20.2791 10.7969 20.5291 10.7969C21.1228 10.7969 21.6541 10.3281 21.6541 9.67188C21.6541 9.09375 21.4041 8.79688 21.0291 8.57812C18.3259 7 14.6228 6.26562 11.0916 6.26562C9.01343 6.26562 7.10718 6.5 5.40405 7C4.96655 7.125 4.5603 7.5 4.5603 8.15625C4.5603 8.79688 5.04468 9.29688 5.6853 9.29688C5.8785 9.29688 6.06107 9.24379 6.21553 9.19888C6.24846 9.18931 6.2801 9.18011 6.3103 9.17188C7.82593 8.75 9.46655 8.59375 11.1072 8.59375C14.3572 8.59375 17.7322 9.3125 19.9041 10.6094ZM19.0291 14.4844C18.8023 14.4844 18.6398 14.3944 18.4832 14.3077L18.4353 14.2812C16.4822 13.125 13.7791 12.3438 10.8103 12.3438C9.29468 12.3438 7.98218 12.5625 6.88843 12.8594C6.82563 12.8761 6.77068 12.8929 6.71968 12.9084C6.58033 12.9509 6.47044 12.9844 6.3103 12.9844C5.79468 12.9844 5.3728 12.5625 5.3728 12.0469C5.3728 11.5312 5.6228 11.1875 6.1228 11.0469C7.46655 10.6719 8.84155 10.3906 10.8572 10.3906C13.9978 10.3906 17.0291 11.1719 19.4197 12.5938C19.8103 12.8281 19.9666 13.125 19.9666 13.5469C19.9666 14.0625 19.5603 14.4844 19.0291 14.4844ZM17.2166 17.4844C17.4041 17.5938 17.5291 17.6562 17.7322 17.6562C18.1228 17.6562 18.4666 17.3438 18.4666 16.9062C18.4666 16.4688 18.2947 16.2969 17.9978 16.1094C15.9822 14.9062 13.6384 14.3125 11.0134 14.3125C9.48218 14.3125 8.01343 14.5156 6.52905 14.8438C6.16968 14.9219 5.8728 15.1562 5.8728 15.6562C5.8728 16.0469 6.16968 16.4219 6.63843 16.4219C6.74683 16.4219 6.92024 16.3754 7.0799 16.3327C7.12735 16.32 7.17359 16.3076 7.21655 16.2969C8.4353 16.0469 9.71655 15.875 11.0134 15.875C13.3103 15.875 15.4822 16.4375 17.2166 17.4844Z" fill="white"/></svg></a><a class="apple"><svg width="21" height="24" viewBox="0 0 21 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M12.2081 5.59615C11.8764 5.69712 11.386 5.78365 10.7081 5.84135C10.737 4.41346 11.112 3.17308 11.8331 2.13462C12.5543 1.09615 13.7658 0.389423 15.4389 0C15.4502 0.050824 15.4615 0.0972259 15.4719 0.140071C15.4881 0.206656 15.5022 0.264652 15.511 0.317308C15.511 0.367788 15.5146 0.414663 15.5182 0.461538C15.5218 0.508413 15.5254 0.555288 15.5254 0.605769C15.5254 1.19712 15.3812 1.86058 15.1072 2.56731C14.8187 3.28846 14.3716 3.95192 13.7658 4.55769C13.2466 5.07692 12.7274 5.42308 12.2081 5.59615ZM9.22256 23.5096C8.42929 23.8413 7.79468 24 7.31872 24C5.83314 24 4.40525 22.7452 2.97737 20.2644C1.57833 17.7837 0.857178 15.375 0.857178 13.0096C0.857178 10.8029 1.40525 9.01442 2.48699 7.61539C3.56872 6.23077 4.92449 5.53846 6.58314 5.53846C7.28987 5.53846 8.12641 5.68269 9.13602 5.97115C10.1312 6.25962 10.7947 6.40385 11.1264 6.40385C11.5447 6.40385 12.237 6.24519 13.1889 5.91346C14.1408 5.59615 14.9774 5.42308 15.6841 5.42308C16.8379 5.42308 17.862 5.74039 18.7562 6.36058C19.261 6.70673 19.7658 7.19712 20.2562 7.80289C19.5062 8.4375 18.9581 9 18.612 9.50481C17.9918 10.399 17.6745 11.3942 17.6745 12.4904C17.6745 13.6731 18.0062 14.7548 18.6697 15.7067C19.3331 16.6587 20.0976 17.2644 20.9485 17.524C20.5879 18.6635 20.011 19.875 19.1745 21.1298C17.9341 23.0192 16.6937 23.9567 15.4678 23.9567C14.9774 23.9567 14.3139 23.7981 13.4485 23.4952C12.5976 23.1779 11.862 23.0337 11.2706 23.0337C10.6937 23.0337 10.0014 23.1923 9.22256 23.5096Z" fill="white"/></svg></a></span></span></li>
                </ArtistList>

            </ContainerWrapper>
            </Wrapper>
            <FooterWrapper/>
        </>
    )
}




export async function getServerSideProps({ params, res }) {
    const apolloClient = initializeApollo();

    const release = await apolloClient.query({
        query: GetPostDocument,
        variables: {
            id: params.id,
        }
    })

    const { data: { post } } = release;

    if (!post) {
        res.statusCode = 404
        res.end('Not found')
        return
    }

    return { props: { ...release.data.post } }
}



export default Artists;